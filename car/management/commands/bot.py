from django.core.management.base import BaseCommand
from django.conf import settings
import telebot
from telebot import types

from ...models import Cars, Client

bot = telebot.TeleBot('6252439193:AAFiZbZUtjqX7xNEwSSEmXd7K7K6OMJCCow', threaded=False)


selected_car = dict()
list_name_car = []
dict_number_car = {}
characteristic_cars = {}

cars = Cars.objects.all()

for element in cars:
    list_name_car.append(element.name_car)
    dict_number_car[element.name_car] = element.id
    characteristic_cars[element.name_car] = {'transmission': element.transmission, 'engin–µ': element.engin–µ,
                                            'year': element.year,
                                            }

list_name_car.insert(0, " ")


buttons = {
    'main_menu': types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'),
    'about': types.KeyboardButton("üîé –û –∫–æ–º–ø–∞–Ω–∏–∏"),
    'car_catalog': types.KeyboardButton('üöó –ö–∞—Ç–∞–ª–æ–≥ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π'),
    'back_phone_number': types.KeyboardButton("üì≤ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"),
    'bid': types.KeyboardButton('üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ'),
}


class Command(BaseCommand):
    @bot.message_handler(commands=['start'])  # —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
    def start(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(buttons['about'], buttons['car_catalog'])
        bot.send_message(message.from_user.id, "üîé –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –∏ —É–∑–Ω–∞—Ç—å –æ –∫–æ–º–ø–∞–Ω–∏–∏ / üöó —Ö–æ—Ç–∏—Ç–µ –∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", reply_markup=markup)

    @bot.message_handler(content_types=['text'])
    def get_text_messages(message):
        if message.text == 'üîé –û –∫–æ–º–ø–∞–Ω–∏–∏':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(buttons['main_menu'])
            bot.send_message(message.from_user.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ üëã \n –ß—Ç–æ–±—ã –ø–æ–¥—Ä–æ–±–Ω–µ–µ —Ép–Ω–∞—Ç—å –æ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç:\n üì≤ –ü–µ—Ä–µ–π—Ç–∏ –ø–æ' + ' [—Å—Å—ã–ª–∫–µ](https://www.landrover.ru/vehicles/new-range-rover/index.html)', reply_markup=markup, parse_mode='Markdown')

        elif message.text == 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(buttons['about'], buttons['car_catalog'])
            bot.send_message(message.from_user.id, "üîé –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –∏ —É–∑–Ω–∞—Ç—å –æ –∫–æ–º–ø–∞–Ω–∏–∏ / üöó —Ö–æ—Ç–∏—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", reply_markup=markup)
            #
            # –ø–æ–∏—Å–∫–∞—Ç—å –µ—â—ë —Å–ø–æ—Å–æ–± –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ç–∞—Ä—Ç –∏–ª–∏ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –∑–∞–Ω–æ–≤–æ –º–µ–Ω—é
            #

        elif message.text == 'üöó –ö–∞—Ç–∞–ª–æ–≥ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            list_name_car_buttons = []
            list = []
            for i in list_name_car:
                list_name_car_buttons.append(types.KeyboardButton(f"{i}"))

            for i in range(1, len(list_name_car)):
                markup.add(list_name_car_buttons[i])

            #markup.add(list_name_car_buttons[1], list_name_car_buttons[11],
                       #list_name_car_buttons[2], list_name_car_buttons[3],
                      # list_name_car_buttons[4], list_name_car_buttons[5],
                     #  list_name_car_buttons[6], list_name_car_buttons[7],
                    #   list_name_car_buttons[8], list_name_car_buttons[9],
                    #   list_name_car_buttons[10], buttons['main_menu'])

            catalog_name_car = "\n üî•".join(list_name_car)
            bot.send_message(message.from_user.id, f"–ù–∞—à –∫–∞—Ç–∞–ª–æ–≥ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π: {catalog_name_car}", reply_markup=markup)
            #for i in range(1, 12):
                #bot.send_message(message.from_user.id, f"–º–∞—à–∏–Ω–∞ –ø–µ—Å–Ω—è {list_name_car[i]} üëá", reply_markup=markup)
                #photo = open(f'car/static/car/images/{list_number_car[i]}.png', 'rb')
                #bot.send_photo(message.from_user.id, photo)

            bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –Ω–µ–π –ø–æ–¥—Ä–æ–±–Ω–µ–µ.', reply_markup=markup)

        elif True in [message.text == name for name in list_name_car]:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(buttons['bid'], buttons['car_catalog'])
            global selected_car
            selected_car[message.from_user.id] = dict_number_car[message.text]
            bot.send_message(message.from_user.id, f"–º–∞—à–∏–Ω–∞ –ø–µ—Å–Ω—è {message.text} : \n –ö–æ—Ä–æ–±–∫–∞: {characteristic_cars[message.text]['transmission']} \n –î–≤–∏–≥–∞—Ç–µ–ª—å: {characteristic_cars[message.text]['engin–µ']} \n –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: {characteristic_cars[message.text]['year']}", reply_markup=markup)
            photo = open(f'car/static/car/images/{dict_number_car[message.text]}.png', 'rb')
            bot.send_photo(message.from_user.id, photo)
            bot.send_message(message.from_user.id, f"–í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ {message.text} –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ –∫–∞—Ç–∞–ª–æ–≥—É.", reply_markup=markup)

        elif (message.text == 'üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ') or (message.text == "üì≤ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"):
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(buttons['main_menu'])
            bot.send_message(message.from_user.id, f"–£–∫–∞–∂–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ: \n üì≤ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.", reply_markup=markup)

        elif (message.text[0] == "+" and message.text[1] == '7') or (message.text[0] == "8" and message.text[1] == '9'):
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(buttons['main_menu'], buttons['car_catalog'])
            phone_num = message.text
            client_name = bot.send_message(message.from_user.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–∞–∫ –º—ã –∫ –≤–∞–º –º–æ–∂–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è: ', reply_markup=markup)
            bot.register_next_step_handler(client_name, Command.client_data_save, phone_num)  # 1 –∞—Ä–≥—É–º–µ–Ω—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ò–º–µ–Ω–∏. 2 –í—ã–∑–æ–≤ –§—É–Ω–∫—Ü–∏–∏. 3 –°–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏—à–µ–¥—à–µ–µ —Å –Ω–æ–º–µ—Ä–æ–º

        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(buttons['main_menu'])
            bot.send_message(message.from_user.id, '–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª!', reply_markup=markup)

    def client_data_save(message, phone_num):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(buttons['main_menu'])
        client_name = message.text
        #print(client_name, phone_num)
        client = Client()
        client.name = client_name
        client.phone_number = phone_num
        client.car_id = selected_car.pop(message.from_user.id)
        client.save()
        bot.send_message(message.from_user.id, 'üì≤ –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É, –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è! ', reply_markup=markup)

    def handle(self, *args, **kwargs):							# –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        bot.enable_save_next_step_handlers(delay=2)  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        bot.load_next_step_handlers()  # –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        bot.infinity_polling()
